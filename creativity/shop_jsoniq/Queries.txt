%%jsoniq

let $shop := {
    "baskets": [
      {
        "personid": 1,
        "items": [
          { "productid": 101, "quantity": 1 },
          { "productid": 104, "quantity": 2 },
          { "productid": 108, "quantity": 1 }
        ]
      },
      {
        "personid": 2,
        "items": [
          { "productid": 102, "quantity": 3 },
          { "productid": 103, "quantity": 1 },
          { "productid": 104, "quantity": 1 },
          { "productid": 110, "quantity": 2 }
        ]
      },
      {
        "personid": 3,
        "items": [
          { "productid": 103, "quantity": 5 },
          { "productid": 107, "quantity": 1 }
        ]
      },
      {
        "personid": 4,
        "items": [
          { "productid": 105, "quantity": 2 },
          { "productid": 109, "quantity": 1 },
          { "productid": 101, "quantity": 1 }
        ]
      },
      {
        "personid": 5,
        "items": [
          { "productid": 106, "quantity": 4 },
          { "productid": 112, "quantity": 1 },
          { "productid": 102, "quantity": 2 }
        ]
      },
      {
        "personid": 6,
        "items": [
          { "productid": 108, "quantity": 3 },
          { "productid": 111, "quantity": 1 }
        ]
      },
      {
        "personid": 7,
        "items": [
          { "productid": 109, "quantity": 2 },
          { "productid": 110, "quantity": 3 },
          { "productid": 103, "quantity": 1 }
        ]
      },
      {
        "personid": 8,
        "items": [
          { "productid": 104, "quantity": 2 },
          { "productid": 105, "quantity": 1 },
          { "productid": 107, "quantity": 2 },
          { "productid": 112, "quantity": 1 }
        ]
      },
      {
        "personid": 9,
        "items": [
          { "productid": 111, "quantity": 5 },
          { "productid": 106, "quantity": 2 }
        ]
      }
    ],
    "persons": [
      { "id": 1, "name": "Aria de Avonturier" },
      { "id": 2, "name": "Borislav de Bijzondere" },
      { "id": 3, "name": "Celine de Creatieve" },
      { "id": 4, "name": "Dante de Dapper" },
      { "id": 5, "name": "Elowen de Elixer" },
      { "id": 6, "name": "Felix de Felle" },
      { "id": 7, "name": "Giselle de Glinster" },
      { "id": 8, "name": "Hector de Heldhaftige" },
      { "id": 9, "name": "Isolde de Inspirerende" }
    ],
    "products": [
      { "id": 101, "name": "Draakenei", "price": 299.99 },
      { "id": 102, "name": "Eenhoornhoorn", "price": 149.50 },
      { "id": 103, "name": "Onzichtbaarheidsdrank", "price": 75.00 },
      { "id": 104, "name": "Alchemistenboek", "price": 49.95 },
      { "id": 105, "name": "Pegasuspennen", "price": 19.99 },
      { "id": 106, "name": "Sneeuwvlokzwaard", "price": 189.00 },
      { "id": 107, "name": "Drakenvleugelveer", "price": 9.75 },
      { "id": 108, "name": "Zeewierelixer", "price": 12.40 },
      { "id": 109, "name": "Zilveren Amulet", "price": 64.60 },
      { "id": 110, "name": "Gouden Toverstaf", "price": 249.20 },
      { "id": 111, "name": "Spookachtige Spiegel", "price": 89.90 },
      { "id": 112, "name": "Muzikale Maansteen", "price": 34.30 }
    ]
  }

#####################
Minimum 4 purchased
#####################

let $person-id := 5

let $person-name := 
  head(for $p in $shop.persons[] where $p.id = $person-id return $p.name)

let $qualifying-product-ids :=
  for $basket in $shop.baskets[]
  where $basket.personid = $person-id
  for $item in $basket.items[]
  where $item.quantity >= 4
  return $item.productid

let $product-descriptions :=
  for $product in $shop.products[]
  where $product.id = $qualifying-product-ids
  return concat($product.name, " (", $product.price, ")")

return concat(
  $person-name,
  " koopt: ",
  string-join($product-descriptions, ", ")
)

##########################
Top 3 purchased products
##########################

for $product in $shop.products[]
let $total-qty := sum(
  for $basket in $shop.baskets[]
  for $item in $basket.items[]
  where $item.productid = $product.id
  return $item.quantity
)
order by $total-qty descending
count $pos
where $pos <= 3
return {
  "rank": $pos,
  "product": $product.name,
  "totalQuantity": $total-qty
}

###########################
Total spending per person
###########################

for $person in $shop.persons[]
let $basket := head(
  for $b in $shop.baskets[]
  where $b.personid = $person.id
  return $b
)
let $total := sum(
  for $item in $basket.items[]
  let $product := head(
    for $p in $shop.products[]
    where $p.id = $item.productid
    return $p
  )
  return $item.quantity * $product.price
)
return {
  "person": $person.name,
  "totalSpent": $total
}

####################################
People who bought the same product
####################################

for $product in $shop.products[]
let $buyers := distinct-values(
  for $basket in $shop.baskets[]
  for $item in $basket.items[]
  where $item.productid = $product.id
  let $person-name := head(
    for $p in $shop.persons[]
    where $p.id = $basket.personid
    return $p.name
  )
  return $person-name
)
where count($buyers) > 1
return {
  "product": $product.name,
  "buyers": $buyers
}

#########################################################
People who bought products for more than a total of 100
#########################################################

let $result :=
  for $person in $shop.persons[]
  let $items := 
    for $basket in $shop.baskets[]
    where $basket.personid = $person.id
    return $basket.items
  let $flatItems := flatten($items)
  let $values :=
    for $item in $flatItems
    let $product := head(
      for $p in $shop.products[]
      where $p.id = $item.productid
      return $p
    )
    let $unit := $product.price
    let $qty := $item.quantity
    let $total := $unit * $qty
    where $total > 100
    return concat(
      $product.name,
      " (unit-price=", $unit,
      ", qty=", $qty,
      ")"
    )
  let $sumTotal :=
    sum(
      for $item in $flatItems
      let $product := head(
        for $p in $shop.products[]
        where $p.id = $item.productid
        return $p
      )
      let $unit := $product.price
      let $qty := $item.quantity
      let $total := $unit * $qty
      where $total > 100
      return $total
    )
  where exists($values)
  return concat(
    $person.name,
    " (id=", $person.id, ") heeft gekocht: ",
    string-join($values, ", "),
    " - totaal uitgegeven = ", $sumTotal
  )

return string-join($result, "
")
